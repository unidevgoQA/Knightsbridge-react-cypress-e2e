{
  "stats": {
    "suites": 10,
    "tests": 12,
    "passes": 11,
    "pending": 0,
    "failures": 1,
    "start": "2022-06-07T10:26:40.603Z",
    "end": "2022-06-07T10:26:45.043Z",
    "duration": 4440,
    "testsRegistered": 12,
    "passPercent": 91.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "47ab15d6-7d35-4965-92d6-f2e3c8a40213",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b3c9e39a-e4cd-49ed-ba45-daba6fd60d18",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, (subject, method) => {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log'; // log the subject to the console\n  console[method]('The subject is', subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n});\ncy.get('button').console('info').then($button => {// subject is still $button\n});",
              "err": {},
              "uuid": "5d405805-5c66-4765-a85d-894dc1c2331c",
              "parentUUID": "b3c9e39a-e4cd-49ed-ba45-daba6fd60d18",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d405805-5c66-4765-a85d-894dc1c2331c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 336,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "01eb628d-9e66-4cf8-b8c5-cbf410ab574d",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "e5a9efcf-c215-4829-aed4-67e2a11541e5",
              "parentUUID": "01eb628d-9e66-4cf8-b8c5-cbf410ab574d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 173,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "66f5aa2b-b0dc-46ad-9f96-58bc92d1757a",
              "parentUUID": "01eb628d-9e66-4cf8-b8c5-cbf410ab574d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: 'session_id'\n});",
              "err": {},
              "uuid": "a4ee09fd-277f-4d4c-a171-fdc0dd22bc6f",
              "parentUUID": "01eb628d-9e66-4cf8-b8c5-cbf410ab574d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e5a9efcf-c215-4829-aed4-67e2a11541e5",
            "66f5aa2b-b0dc-46ad-9f96-58bc92d1757a",
            "a4ee09fd-277f-4d4c-a171-fdc0dd22bc6f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 479,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "717c207c-1973-4659-bb7f-bcdb7c99d69d",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "968f7988-aa36-41f5-a0c9-1a69ec6299b3",
              "parentUUID": "717c207c-1973-4659-bb7f-bcdb7c99d69d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "968f7988-aa36-41f5-a0c9-1a69ec6299b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 161,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "698fac61-25b6-42d9-9d1b-40fe043badd2",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 406,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\2-advanced-examples\\\\cypress_api.cy.js\\\\Cypress.config() -- Get and set configuration options (failed) (1).png\"\n      }\n    ],\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\2-advanced-examples\\\\cypress_api.cy.js\\\\Cypress.config() -- Get and set configuration options (failed) (attempt 2) (1).png\"\n      }\n    ],\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\2-advanced-examples\\\\cypress_api.cy.js\\\\Cypress.config() -- Get and set configuration options (failed) (attempt 3) (1).png\"\n      }\n    ]\n  ]\n}",
              "code": "// https://on.cypress.io/config\nlet myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {
                "message": "AssertionError: expected { Object (watchForFileChanges, video, ...) } to have property 'defaultCommandTimeout' of 4000, but got 10000",
                "estack": "AssertionError: expected { Object (watchForFileChanges, video, ...) } to have property 'defaultCommandTimeout' of 4000, but got 10000\n    at Context.eval (https://example.cypress.io/__cypress/tests?p=cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js:173:30)",
                "diff": "- 10000\n+ 4000\n"
              },
              "uuid": "73064159-d452-45ec-96a2-0ed5b355c935",
              "parentUUID": "698fac61-25b6-42d9-9d1b-40fe043badd2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "73064159-d452-45ec-96a2-0ed5b355c935"
          ],
          "pending": [],
          "skipped": [],
          "duration": 406,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "01e7f1a9-1d0f-46f2-a030-eab005391a27",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nlet visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
              "err": {},
              "uuid": "302afac6-466c-4abf-8dc6-0caebca3636e",
              "parentUUID": "01e7f1a9-1d0f-46f2-a030-eab005391a27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "302afac6-466c-4abf-8dc6-0caebca3636e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 164,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "74afb71c-6f0b-41a0-96b3-a65f9cb372ea",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n}); // get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "cab68d28-a828-4de0-9840-e203374d624a",
              "parentUUID": "74afb71c-6f0b-41a0-96b3-a65f9cb372ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cab68d28-a828-4de0-9840-e203374d624a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 151,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ff18029c-3bfd-44c1-937a-973a7b33e048",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "5d4e1c9d-3edc-4df0-87fb-388ca4c6fd62",
              "parentUUID": "ff18029c-3bfd-44c1-937a-973a7b33e048",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d4e1c9d-3edc-4df0-87fb-388ca4c6fd62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 148,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "745824fb-f071-4e99-a508-db16307fe2d7",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "3113563a-83e4-484e-90c5-930d834627e9",
              "parentUUID": "745824fb-f071-4e99-a508-db16307fe2d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3113563a-83e4-484e-90c5-930d834627e9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 151,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "660496cd-6175-406f-9e71-147d20434734",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "809f726d-39d7-4871-a89c-0b0932347885",
              "parentUUID": "660496cd-6175-406f-9e71-147d20434734",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "809f726d-39d7-4871-a89c-0b0932347885"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 147,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "86e816f9-3e81-4eab-9396-9ef47cc230dd",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "4a08931f-25b0-415f-92bb-09dc021d0a1a",
              "parentUUID": "86e816f9-3e81-4eab-9396-9ef47cc230dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a08931f-25b0-415f-92bb-09dc021d0a1a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 153,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\report\\.jsons",
        "charts": true,
        "reportPageTitle": "custom-title",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}